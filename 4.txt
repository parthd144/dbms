Consider  two tables Customer(c_id, c_name , email , city , pincode)Order(order_id , date , amount , cust_id.
-Create both the tables with primary key and foreign key constraints. 
-insert 10 records each.
-Find all orders placed by customers with cust_id 2
-Find list of customers who placed their order and details of order
-List of customers who havenâ€™t placed order
-List all orders and append to customer table
-Display all records
-Display customer that are from same city8


-- Create the Customer table with primary key constraint
CREATE TABLE Customer (
    c_id INT PRIMARY KEY,
    c_name VARCHAR(255),
    email VARCHAR(255),
    city VARCHAR(255),
    pincode INT
);

-- Create the Order table with primary key and foreign key constraints
CREATE TABLE Order (
    order_id INT PRIMARY KEY,
    date DATE,
    amount DECIMAL(10, 2),
    cust_id INT,
    FOREIGN KEY (cust_id) REFERENCES Customer(c_id)
);

-- Insert 10 records into the Customer table
INSERT INTO Customer (c_id, c_name, email, city, pincode)
VALUES
    (1, 'John Doe', 'john@example.com', 'New York', 10001),
    (2, 'Jane Smith', 'jane@example.com', 'Los Angeles', 90001),
    -- Add more records...

-- Insert 10 records into the Order table
INSERT INTO Order (order_id, date, amount, cust_id)
VALUES
    (101, '2023-01-15', 500.00, 1),
    (102, '2023-02-20', 750.00, 2),
    -- Add more records...

-- Find all orders placed by customers with cust_id 2
SELECT *
FROM Order
WHERE cust_id = 2;

-- Find a list of customers who placed their order and details of the order
SELECT c.c_name, c.email, o.order_id, o.date, o.amount
FROM Customer c
INNER JOIN Order o ON c.c_id = o.cust_id;

-- List customers who haven't placed an order
SELECT c.c_name
FROM Customer c
LEFT JOIN Order o ON c.c_id = o.cust_id
WHERE o.cust_id IS NULL;

-- List all orders and append to the customer table
-- Note: This is a view rather than a table, as the data is derived.
CREATE VIEW CustomerWithOrders AS
SELECT c.c_id, c.c_name, c.email, c.city, c.pincode, o.order_id, o.date, o.amount
FROM Customer c
LEFT JOIN Order o ON c.c_id = o.cust_id;

-- Display all records from the view
SELECT *
FROM CustomerWithOrders;

-- Display customers that are from the same city (e.g., 'Los Angeles')
SELECT c_name
FROM Customer
WHERE city = 'Los Angeles';
